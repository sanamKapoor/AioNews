{"version":3,"sources":["components/img/user-icon.png","components/Login.js"],"names":["module","exports","Login","useState","isLogin","setLogin","useForm","mode","register","handleSubmit","errors","watch","reset","err","setError","history","useHistory","sameEmail","user","values","email","password","push","setTimeout","diffEmail","useEffect","confirmPassword","clearError","onSubmit","users","JSON","parse","localStorage","getItem","savedNews","setItem","stringify","createUser","Users","newUser","className","src","avatar","alt","type","name","ref","required","pattern","value","message","placeholder","minLength","validate","onClick"],"mappings":"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","file":"static/js/5.19590ce2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-icon.54e9ec53.png\";","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport avatar from \"./img/user-icon.png\";\r\n\r\nfunction Login() {\r\n\r\n    const [isLogin, setLogin] = useState(false);\r\n    const { register, handleSubmit, errors, watch, reset } = useForm({ mode: 'onChange'});\r\n    const [err, setError] = useState(false);\r\n    let userCreated  = true;\r\n\r\n    let history = useHistory(); \r\n  \r\n    const sameEmail = (user, values) => {\r\n  \r\n      if(isLogin){\r\n        \r\n        if(user.email === values.email && user.password === values.password){\r\n          history.push('/home', { user: user });\r\n          reset();\r\n          return;\r\n        } \r\n        else {\r\n          setError('Please enter correct email and password');\r\n  \r\n          setTimeout(() => {\r\n            setError('')\r\n          }, 2000)\r\n  \r\n          reset();\r\n          return;\r\n        }\r\n      } \r\n      else {\r\n        setError('User with this email already exist');\r\n  \r\n        setTimeout(() => {\r\n          setError('')\r\n        }, 2000)\r\n  \r\n        reset();\r\n        }\r\n    } \r\n  \r\n    const diffEmail = (user, values) => {\r\n      if(isLogin){\r\n        setError('User with this email does not exist');\r\n  \r\n          setTimeout(() => {\r\n            setError('')\r\n          }, 2000)\r\n  \r\n          reset();\r\n          return;\r\n      } \r\n    }\r\n  \r\n    const newUser = (values) => {\r\n      if(!isLogin){\r\n  \r\n        let user = {\r\n          email: values.email,\r\n          password: values.password,\r\n          savedNews: []\r\n        }\r\n  \r\n        let Users = [];\r\n        Users.push(user);\r\n        localStorage.setItem('users', JSON.stringify(Users));\r\n        \r\n        reset();\r\n        history.push('/home', { user: user });\r\n        return;\r\n      } else {\r\n        setError('You need to register first');\r\n  \r\n        setTimeout(() => {\r\n          setError('')\r\n        }, 2000)\r\n  \r\n        reset();\r\n        return;\r\n      }\r\n    }\r\n  \r\n    const createUser = (values) => {\r\n      if(!isLogin){\r\n  \r\n      let user = {\r\n        email: values.email,\r\n        password: values.password,\r\n        savedNews: []\r\n      }\r\n  \r\n      let users = JSON.parse(localStorage.getItem('users'));\r\n      users.push(user);\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n      history.push('/home', { user: user });\r\n  \r\n      reset();\r\n      return;\r\n      }\r\n    }\r\n   \r\n    const Submit = values => {\r\n  \r\n      let users = JSON.parse(localStorage.getItem('users'));\r\n  \r\n      if(users){\r\n        for(let user of users){\r\n          if(user.email === values.email){\r\n            sameEmail(user, values);\r\n            return;\r\n          } else {\r\n            diffEmail(user, values);\r\n          }\r\n        }\r\n      } else {\r\n        newUser(values);\r\n        return;\r\n      }\r\n  \r\n      if(userCreated){\r\n        createUser(values);\r\n      } \r\n    }\r\n  \r\n    const clearError = (errors) => {\r\n      setTimeout(() => {\r\n        errors.email = null\r\n        errors.password = null\r\n        errors.confirmPassword = null\r\n      }, 1000)\r\n    }\r\n  \r\n    useEffect(() => {\r\n      clearError(errors)\r\n    }, [errors])\r\n  \r\n    return (\r\n        <article>\r\n        <form onSubmit={handleSubmit(Submit)} className=\"form p-4 p-lg-5 text-primary shadow\">\r\n            <div className=\"text-center\">\r\n            <img src={avatar} className=\"user-img\" alt=\"\"/>\r\n            </div>\r\n          <input \r\n              type=\"email\" \r\n              name=\"email\"\r\n              ref={\r\n                register({\r\n                  required: 'Email is required',\r\n                  pattern: {\r\n                    value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n                    message: 'Invalid email address'\r\n                  }\r\n                })\r\n              }\r\n              placeholder=\"Enter Email\" \r\n              className=\"form-text mt-4 form-control shadow-sm border-0 rounded-pill px-3\" />\r\n              {\r\n                errors.email && <small className=\"text-danger mx-3\">{errors.email.message}</small>\r\n              }\r\n\r\n            <input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              ref={\r\n                register({\r\n                  required: 'Password is required',\r\n                  minLength: {\r\n                    value: 6,\r\n                    message: 'Password should be 6 characters long'\r\n                  }\r\n                })\r\n              }\r\n              placeholder=\"Enter Password\" \r\n              className=\"form-text mt-3 form-control shadow-sm border-0 rounded-pill px-3\" />\r\n              {\r\n                errors.password && <small className=\"text-danger mx-3\">{errors.password.message}</small>\r\n              }          \r\n              \r\n              {\r\n              !isLogin ?\r\n                <input \r\n                type=\"password\" \r\n                name=\"confirmPassword\" \r\n                ref={\r\n                  register({\r\n                    required: 'Confirm your password',\r\n                    validate: (value) => value === watch('password') || \"Password don't match\"\r\n                  })\r\n                }\r\n                placeholder=\"Confirm Password\" \r\n                className=\"form-text mt-3 form-control shadow-sm border-0 rounded-pill px-3\" />              \r\n                : ''\r\n             }\r\n            { \r\n            (!isLogin && errors.confirmPassword) && <small className=\"text-danger mx-3\">{errors.confirmPassword.message}</small>\r\n            }\r\n\r\n          <div className=\"my-3 text-center\">\r\n            { err && <small className=\"text-danger mb-1\">{err}</small>}\r\n            <button type=\"submit\" className=\"form-text btn btn-primary btn-block shadow rounded-pill\">\r\n            { isLogin ? 'Login' : 'Sign Up'}\r\n            </button>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <span onClick={() => setLogin(!isLogin)} className=\"form-text text-dark switch-btn\">\r\n            { !isLogin ? 'Login' : 'Register'}\r\n            </span>\r\n          </div>\r\n        </form>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}